from vkbottle import BaseMiddleware

# Middleware для инициализации и управления состоянием пользователя. Гарантирует наличие словаря state в объекте события.
# Наследуется от BaseMiddleware и реализует паттерн цепочки обязанностей
class UserDataMiddleware(BaseMiddleware):
    async def __call__(self, handlers, event, *args, **kwargs):
        #
        #       Основной метод middleware, вызываемый для каждого события.

        #        Args:
        #            handlers: Следующий обработчик в цепочке middleware
        #            event: Объект события (сообщение или другое событие VK)
        #            *args: Дополнительные позиционные аргументы
        #            **kwargs: Дополнительные именованные аргументы

        #        Returns:
        #            Результат выполнения следующего обработчика в цепочке

        #        Логика работы:
        #           1. Проверяет наличие атрибута state у события
        #           2. Если атрибут отсутствует - создает пустой словарь
        #           3. Передает управление следующему обработчику в цепочке

        # проверяем наличие state у атрибута
        if not hasattr(event, "state"):
            # инициализируем, если нет
            event.state = {}
        return await handlers(event)