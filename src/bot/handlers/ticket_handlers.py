from vkbottle.bot import Message
from src.services.api.simleone import SimpleOneAPI
from src.core.states import UserStates
from src.utils.keyboards import (
    get_categories_keyboard,
    get_subcategories_keyboard,
    get_file_upload_keyboard,
    get_main_menu_keyboard,
    get_ticket_actions_keyboard
)
from src.core.config import Config

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–∏–∫–µ—Ç-—Å–∏—Å—Ç–µ–º–æ–π
simpleone_api = SimpleOneAPI()

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
async def create_ticket_handler(message: Message):
    if not message.state.get("authenticated"):
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å")
        return

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–±–ª–µ–º—ã:",
        keyboard=get_categories_keyboard()
    )
    await message.state.set_state(UserStates.CATEGORY_SELECTION)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async def category_selection_handler(message: Message):
    if message.text not in Config.CATEGORIES:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞.")
        return

    message.state["category"] = message.text
    await message.answer(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {message.text}\n–¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        keyboard=get_subcategories_keyboard(message.text)
    )
    await message.state.set_state(UserStates.SUBCATEGORY_SELECTION)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
async def subcategory_selection_handler(message: Message):
    category = message.state.get("category")
    if message.text == "–ù–∞–∑–∞–¥":
        await message.answer(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–±–ª–µ–º—ã:",
            keyboard=get_categories_keyboard()
        )
        await message.state.set_state(UserStates.CATEGORY_SELECTION)
        return

    if message.text not in Config.CATEGORIES.get(category, []):
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞.")
        return

    message.state["subcategory"] = message.text
    await message.answer(
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é: {message.text}\n–¢–µ–ø–µ—Ä—å –ø–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É:"
    )
    await message.state.set_state(UserStates.PROBLEM_DESCRIPTION)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã
async def problem_description_handler(message: Message):
    message.state["description"] = message.text
    await message.answer(
        "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª—ã (—Å–∫—Ä–∏–Ω—à–æ—Ç—ã, –ª–æ–≥–∏ –∏ —Ç.–¥.).\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–µ—Ç —Ñ–∞–π–ª–æ–≤'.",
        keyboard=get_file_upload_keyboard()
    )
    await message.state.set_state(UserStates.FILE_UPLOAD)

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏
async def file_upload_handler(message: Message):
    email = message.state.get("email")
    if not email:
        await message.answer("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return

    # –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ —Ñ–∞–π–ª–æ–≤
    if message.text == "–ù–µ—Ç —Ñ–∞–π–ª–æ–≤":
        attachments = []
    else:
        attachments = []
        if message.attachments:
            for attachment in message.attachments:
                if attachment.doc:
                    attachments.append(attachment.doc.url)
                elif attachment.photo:
                    sizes = attachment.photo.sizes
                    max_size = max(sizes, key=lambda s: s.width * s.height)
                    attachments.append(max_size.url)

    # —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
    ticket = await simpleone_api.create_ticket(
        email=email,
        category=message.state["category"],
        subcategory=message.state["subcategory"],
        description=message.state["description"],
        attachments=attachments
    )

    if ticket:
        ticket_id = ticket.get("id", "N/A")
        await message.answer(
            f"‚úÖ –ó–∞—è–≤–∫–∞ #{ticket_id} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!",
            keyboard=get_ticket_actions_keyboard()
        )
    else:
        await message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏.",
            keyboard=get_main_menu_keyboard()
        )
    await message.state.finish()

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞—è–≤–æ–∫
async def my_tickets_handler(message: Message):
    email = message.state.get("email")
    if not email:
        await message.answer("–°–Ω–∞—á–∞–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å")
        return

    tickets = await simpleone_api.get_user_tickets(email)
    if tickets is None:
        await message.answer(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫.",
            keyboard=get_main_menu_keyboard()
        )
    elif not tickets:
        await message.answer(
            "–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫.",
            keyboard=get_main_menu_keyboard()
        )
    else:
        response = "üìã –í–∞—à–∏ –∑–∞—è–≤–∫–∏:\n\n"
        for ticket in tickets[:10]:
            response += (
                f"üîπ #{ticket.get('id', 'N/A')}\n"
                f"üìå –¢–µ–º–∞: {ticket.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
                f"üîÑ –°—Ç–∞—Ç—É—Å: {ticket.get('status', '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω')}\n\n"
            )
        await message.answer(response, keyboard=get_main_menu_keyboard())

# –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –∑–∞—è–≤–∫–µ
async def additional_info_handler(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –≤–∞—à–µ–π –∑–∞—è–≤–∫–µ:")
    await message.state.set_state(UserStates.ADDITIONAL_INFO)

async def additional_info_text_handler(message: Message):
    message.state["additional_text"] = message.text
    await message.answer(
        "–ï—Å–ª–∏ –Ω—É–∂–Ω–æ, –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª—ã (—Å–∫—Ä–∏–Ω—à–æ—Ç—ã, –ª–æ–≥–∏ –∏ —Ç.–¥.).\n"
        "–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–ù–µ—Ç —Ñ–∞–π–ª–æ–≤'.",
        keyboard=get_file_upload_keyboard()
    )
    await message.state.set_state(UserStates.FILE_UPLOAD)